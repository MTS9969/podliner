name: release

# wichtig: Token darf Releases schreiben
permissions:
  contents: write

on:
  push:
    tags:
      - "v*"
  workflow_dispatch:

jobs:
  build-linux:
    name: build linux (${{ matrix.rid }})
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        rid: [linux-x64, linux-arm64]
    steps:
      - uses: actions/checkout@v4

      - name: Extract version from tag
        id: meta
        run: |
          VER="${GITHUB_REF##*/}"
          echo "version=${VER#v}" >> $GITHUB_OUTPUT

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: "9.0.x"

      - name: Restore
        run: dotnet restore

      - name: Publish (self-contained)
        run: |
          dotnet publish ./StuiPodcast.App/StuiPodcast.App.csproj \
            -c Release -r ${{ matrix.rid }} \
            -p:SelfContained=true \
            -p:PublishSingleFile=true \
            -p:IncludeNativeLibrariesForSelfExtract=true \
            -p:DebugType=None \
            -p:Version=${{ steps.meta.outputs.version }} \
            -o publish/${{ matrix.rid }}

      - name: Package tar.gz
        run: |
          mkdir -p dist
          mkdir -p package/podliner
          cp publish/${{ matrix.rid }}/StuiPodcast.App package/podliner/podliner
          chmod +x package/podliner/podliner
          cp LICENSE package/podliner/ 2>/dev/null || true
          cp README.md package/podliner/ 2>/dev/null || true
          tar -C package -czf dist/podliner-${{ matrix.rid }}.tar.gz podliner
        shell: bash

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: podliner-${{ matrix.rid }}
          path: dist/podliner-${{ matrix.rid }}.tar.gz

  build-windows:
    name: build windows (win-x64)
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4

      - name: Extract version from tag
        id: meta
        shell: bash
        run: |
          VER="${GITHUB_REF##*/}"
          echo "version=${VER#v}" >> $GITHUB_OUTPUT

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: "9.0.x"

      - name: Restore
        run: dotnet restore

      - name: Publish (self-contained)
        run: >
          dotnet publish .\StuiPodcast.App\StuiPodcast.App.csproj
          -c Release -r win-x64
          -p:SelfContained=true
          -p:PublishSingleFile=true
          -p:IncludeNativeLibrariesForSelfExtract=true
          -p:DebugType=None
          -p:Version=${{ steps.meta.outputs.version }}
          -o publish\win-x64

      - name: Package zip
        shell: pwsh
        run: |
          New-Item -Type Directory package\podliner | Out-Null
          Copy-Item publish\win-x64\StuiPodcast.App.exe package\podliner\podliner.exe
          If (Test-Path LICENSE) { Copy-Item LICENSE package\podliner\ }
          If (Test-Path README.md) { Copy-Item README.md package\podliner\ }
          Compress-Archive -Path package\podliner\* -DestinationPath podliner-win-x64.zip
          New-Item -Type Directory dist | Out-Null
          Move-Item podliner-win-x64.zip dist\

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: podliner-win-x64
          path: dist/podliner-win-x64.zip

  build-macos:
    name: build macOS (${{ matrix.rid }})
    runs-on: macos-latest
    strategy:
      fail-fast: false
      matrix:
        rid: [osx-x64, osx-arm64]
    steps:
      - uses: actions/checkout@v4

      - name: Extract version from tag
        id: meta
        run: |
          VER="${GITHUB_REF##*/}"
          echo "version=${VER#v}" >> $GITHUB_OUTPUT

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: "9.0.x"

      - name: Restore
        run: dotnet restore

      - name: Publish (self-contained)
        run: |
          dotnet publish ./StuiPodcast.App/StuiPodcast.App.csproj \
            -c Release -r ${{ matrix.rid }} \
            -p:SelfContained=true \
            -p:PublishSingleFile=true \
            -p:IncludeNativeLibrariesForSelfExtract=true \
            -p:DebugType=None \
            -p:Version=${{ steps.meta.outputs.version }} \
            -o publish/${{ matrix.rid }}

      - name: Package tar.gz
        run: |
          mkdir -p dist
          mkdir -p package/podliner
          cp publish/${{ matrix.rid }}/StuiPodcast.App package/podliner/podliner
          chmod +x package/podliner/podliner
          cp LICENSE package/podliner/ 2>/dev/null || true
          cp README.md package/podliner/ 2>/dev/null || true
          tar -C package -czf dist/podliner-${{ matrix.rid }}.tar.gz podliner

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: podliner-${{ matrix.rid }}
          path: dist/podliner-${{ matrix.rid }}.tar.gz

  publish:
    name: publish release
    runs-on: ubuntu-latest
    needs: [build-linux, build-windows, build-macos]
    steps:
      - uses: actions/checkout@v4

      - name: Extract version from tag
        id: meta
        run: |
          VER="${GITHUB_REF##*/}"
          echo "version=${VER#v}" >> $GITHUB_OUTPUT

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: gathered

      - name: Gather into dist/
        run: |
          mkdir -p dist
          find gathered -type f -name 'podliner-*' -exec cp {} dist/ \;
          # Installer als Asset beilegen (stabilere Release-URL)
          cp scripts/install.ps1 dist/install.ps1
          cp scripts/install.sh dist/install.sh
          cp scripts/install-macos.sh dist/install-macos.sh

      - name: Generate SHA256SUMS
        run: |
          cd dist
          sha256sum * > SHA256SUMS
          cat SHA256SUMS

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          name: podliner ${{ steps.meta.outputs.version }}
          draft: false
          prerelease: ${{ contains(github.ref_name, '-rc') || contains(github.ref_name, '-beta') }}
          generate_release_notes: true
          files: |
            dist/podliner-linux-x64.tar.gz
            dist/podliner-linux-arm64.tar.gz
            dist/podliner-osx-x64.tar.gz
            dist/podliner-osx-arm64.tar.gz
            dist/podliner-win-x64.zip
            dist/install.sh
            dist/install.ps1
            dist/install-macos.sh
            dist/SHA256SUMS

